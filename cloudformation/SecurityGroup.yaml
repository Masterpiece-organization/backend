AWSTemplateFormatVersion: 2010-09-09
Description: "CloudFormation template to create security group"

Parameters:
  SeukHomeIp:
    Description: "The ip address"
    Type: String
    Default: "110.12.59.66/32"
  SeukHomeDesc:
    Description: "SeukJeong home name"
    Type: String
    Default: "Seuk_Home"
  MinHyukHomeIp:
    Description: "The ip address"
    Type: String
    Default: "142.115.138.237/32"
  MinHyukHomeDesc:
    Description: "MinHyuk home name"
    Type: String
    Default: "MinHyuk_Home"
  Ec2Ip:
    Description: "The ec2 ip address"
    Type: String
    Default: "43.201.46.100/32"
  CafeIp:
    Description: "The cafe ip address"
    Type: String
    Default: "124.57.47.203/32"
  CafeIpDesc:
    Description: ""
    Type: String
    Default: "Cafe_IP"
  SecondCafeIp:
    Description: "The cafe ip address of coffee dongsan"
    Type: String
    Default: "220.72.246.29/32"
  GoyangHomeIp:
    Description: "The ip address"
    Type: String
    Default: "58.29.191.77/32"



Resources:
  PostgresSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow PostgreSQL access"
      VpcId: !ImportValue VPC-ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref SeukHomeIp
          Description: !Ref SeukHomeDesc
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref MinHyukHomeIp
          Description: !Ref MinHyukHomeDesc
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref Ec2Ip
          Description: "EC2 IP"
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref SecondCafeIp
          Description: "Cafe IP"
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref GoyangHomeIp
          Description: "Goyang home IP"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-rds-sg

  BackendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Backend project security group"
      VpcId: !ImportValue VPC-ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: "Allow backend project port for elb"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: "Allow backend project port for elb"
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
          Description: "Allow backend project port(fastapi)"
        - IpProtocol: tcp
          FromPort: 5672
          ToPort: 5672
          CidrIp: 0.0.0.0/0
          Description: "Allow RabbitMQ AMQP port"
        - IpProtocol: tcp
          FromPort: 15672
          ToPort: 15672
          CidrIp: 0.0.0.0/0
          Description: "Allow RabbitMQ management console port"
        - IpProtocol: tcp
          FromPort: 15674
          ToPort: 15674
          CidrIp: 0.0.0.0/0
          Description: "Allow RabbitMQ STOMP port"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-ec2-sg

  SshSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "ssh security group"
      VpcId: !ImportValue VPC-ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SeukHomeIp
          Description: !Ref SeukHomeDesc
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CafeIp
          Description: !Ref CafeIpDesc
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-ssh-sg

Outputs:
  PostgresSecurityGroupId:
    Description: "The ID of PostgresSecurityGroup"
    Value: !GetAtt PostgresSecurityGroup.GroupId
    Export:
      Name: sg-postgres-id

  BackendSecurityGroupId:
    Description: "The ID of Backend security group"
    Value: !GetAtt BackendSecurityGroup.GroupId
    Export:
      Name: sg-backend-id

  SshSecurityGroupId:
    Description: "The ID of ssh security group"
    Value: !GetAtt SshSecurityGroup.GroupId
    Export:
      Name: sg-ssh-id
